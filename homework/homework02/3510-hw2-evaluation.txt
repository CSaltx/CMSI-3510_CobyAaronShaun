

CMSI 3510 Operating Systems
Spring Semester 2023
Results for Homework #2 Evaluation
==================================

Question 1 mutex reversing:          5/ 5 points
   Perfect ~ Very nice and complete analysis!

Question 2 auditing code change:     5/ 5 points
   Perfect ~ Another very nice and complete analysis!

Question 3 test program:            18/20 points
   Unfortunately, using JUnit for this type of testing will not actually
   demonstrate the operation the way it should work.  While I admire that
   you are using the testing framework, in this case the "test program"
   should actually be a running program that reads/writes to the buffer
   multiple times so that you can demonstrate the operation and the method
   of synchronization.  Simply calling the methods a time or two each in
   the 'JUnit' way doesn't show that appropriately for the test.

   However, none of this was specifically spelled out in the language of
   the problem, so most of the credit is given.

Question 4 notifyall() addition:     9/10 points
   Same comment as number 3 with the addition that what should be shown by
   these two problems is that in the original code, the two methods read
   and write into the buffer sort of 'at random', with the operating system
   picking which one will run next.  There is no specific order to the read
   and write operations.  The purpose of the modified code is to show that
   the synchronization can be changed so that there IS an order applied when
   the writer fills the buffer and makes the reader wait until that occurs,
   then notifies the reader that the buffer is full so it can be emptied.

   Again, not specifically stated in the problem language, so most credit is
   provided for the work you put in on these two problems.

Question 5a 2-phase locking:         5/ 5 points
   Perfect!

Question 5b short read locks:        5/ 5 points
   Perfect!

Question 5c snapshot isolation:      5/ 5 points
   Perfect!

Question 6 virtual address xlate:    5/ 5 points
   Perfect!

Question 7 calc. explanation:        5/ 5 points
   Perfect!

Question 8 loop 4096 analysis:      20/20 points
   Perfect ~ interesting analysis, and good that you see the effect of cache!

Question 9 fork() tree:             12/15 points
   Unfortunately, this was supposed to be done in "C", not "C++".  The code
   is very similar, but not quite the same.  When I try to compile with 'gcc'
   I get an error on the "#include <iostream>" line.  When I compile it with
   "g++" to get the "C++" compiler, I get an error on "#include <sys/wait.h>".
   Looking at the code, it will run on Mac, I'm sure.

   Once again, the intent of the problem has been missed.  You only need one
   simple program to run the "fork()" operation three times.  This produces
   a total of nine separate programs.  If you use the "ps -eaf" command to
   view the processes, you will be able to see the parent process ID's for
   all of the processes running.  You should see something like this:

      1684989130  7789  7739   0  5:04PM ttys000    0:00.00 multiforkerMac
      1684989130  7790  7789   0  5:04PM ttys000    0:00.00 multiforkerMac
      1684989130  7791  7789   0  5:04PM ttys000    0:00.00 multiforkerMac
      1684989130  7792  7789   0  5:04PM ttys000    0:00.00 multiforkerMac
      1684989130  7793  7790   0  5:04PM ttys000    0:00.00 multiforkerMac
      1684989130  7794  7791   0  5:04PM ttys000    0:00.00 multiforkerMac
      1684989130  7795  7790   0  5:04PM ttys000    0:00.00 multiforkerMac
      1684989130  7796  7793   0  5:04PM ttys000    0:00.00 multiforkerMac
      1684989130  7798  7761   0  5:04PM ttys001    0:00.00 grep multi

      The tree would look like this:

                           7739
                             |
                    +------7789-------+
                    |        |        |
                    |        |        |
            +-----7790     7791     7792
            |       |        |
            |       |        |
          7793    7795     7794
            |
            |
          7796



Total 94 out of 100 = 94.00% which is an A

Comments:
---------
Nice work!


===========================
Current course evaluations:
===========================

    Homework01:  12/ 12 = 100.00% which is 10.00 points
    Homework02:  94/100 =  94.00% which is  9.40 points
Prelim. Design:  23/ 25 =  92.00% which is  9.20 points
                                           -----
                                   Total:  28.60 out of 30.00 = 95.33%
                                             which is an A
